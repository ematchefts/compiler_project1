package compiler.parser;

import compiler.scanner.Token;

public abstract class Expression {
	private Integer num;
	private SimpleExpressionP simpleExpressionP;
	private Expression expression;
	private ExpressionP expressionP;
	private String id;
	
	public Expression(Integer n, SimpleExpressionP sep){
		num = n;
		simpleExpressionP = sep;
	}
	
	public Expression(Expression e, SimpleExpressionP sep){
		expression = e;
		simpleExpressionP = sep;
	}
	
	public Expression (String ident, ExpressionP ep){
		id = ident;
		expressionP = ep;
	}
	
	public static Expression parseExpression(Parser parser) 
			throws ParserException{
		
		Token currentToken = parser.getCurrentToken();
		Expression expression;
		
		switch(currentToken.getTokenType()){
			case NUM_TOKEN:
				Integer n = (Integer) currentToken.getTokenData();
				SimpleExpressionP 
				
		default:
			break;
				
		}
		return null;
	}
}
